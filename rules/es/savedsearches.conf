[SPK2 - Suspicious connection to a C2]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Suspicious connection to a C2
enableSched = 1
quantity = 0
relation = greater than
search = index=win | search action=allowed AND direction=outbound\
| where dest_port=8080 OR dest_port=9000 OR dest_port=8000\
| stats count values(app) as app values(dest_ip) as dest_ip values(src_ip) as src_ip values(dest_port) as dest_port values(host) as host values(sourcetype) as sourcetype by user\
| where count > 1000\
| table app, dest_ip, src_ip, host, user, dest_port, count



[SPK8 - Malicious execution of powershell command]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Malicious execution of powershell command
enableSched = 1
quantity = 0
relation = greater than
search = index=win CommandLine="*powershell* -ep bypass -e *"\
| stats count by ParentImage CommandLine user\
| table ParentImage, user, CommandLine


[SPK10 - Potential Kerberoasting attack]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Potential Kerberoasting attack
enableSched = 1
quantity = 0
relation = greater than
search = index=win EventCode=4769 ServiceName="honeypot"\
| eval Source=if(IpAddress=="::1", Computer, IpAddress)\
| rex field=user "(?<user>.+)@(?<domain>.+)$"\
| table _time, host, Source, TargetUserName, ServiceName, TicketEncryptionType, user\
| sort - _time

[SPK1 - Suspicious mshta.exe child process]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Suspicious mshta.exe child process
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=mshta.exe AND (Processes.process_name=powershell.exe OR Processes.process_name=colorcpl.exe OR Processes.process_name=msbuild.exe OR Processes.process_name=microsoft.workflow.compiler.exe OR Processes.process_name=searchprotocolhost.exe OR Processes.process_name=scrcons.exe OR Processes.process_name=cscript.exe OR Processes.process_name=wscript.exe OR Processes.process_name=powershell.exe OR Processes.process_name=cmd.exe) by Processes.dest Processes.parent_process Processes.user\
| `drop_dm_object_name(Processes)`\
| `security_content_ctime(firstTime)`\
| `security_content_ctime(lastTime)`\
| `suspicious_mshta_child_process_filter`

[SPK3 - Certutil.exe Download With URLCache and Split Arguments]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Certutil.exe Download With URLCache and Split Arguments
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_certutil` (Processes.process=*urlcache* Processes.process=*split*) OR Processes.process=*urlcache* by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.original_file_name Processes.parent_process_id \
| `drop_dm_object_name(Processes)` \
| `security_content_ctime(firstTime)` \
| `security_content_ctime(lastTime)` \
| `certutil_download_with_urlcache_and_split_arguments_filter`

[SPK4 - Winrm suspicious command]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Winrm suspicious command
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=wsmprovhost.exe Processes.process_name IN ("cmd.exe","sh.exe","bash.exe","powershell.exe","pwsh.exe","schtasks.exe","certutil.exe","whoami.exe","bitsadmin.exe","scp.exe") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id \
| `drop_dm_object_name(Processes)` \
| `security_content_ctime(firstTime)` \
| `security_content_ctime(lastTime)` \
| `winrm_spawning_a_process_filter`

[SPK5 - Ngrok data exfiltration on Network]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Ngrok data exfiltration on Network
enableSched = 1
quantity = 0
relation = greater than
search = index=win | search signature="DNSEvent (DNS query)"\
| where query like "%.ngrok%"\
| stats count values(query) as query values(process_exec) as process_exec values(host) as host values(sourcetype) as sourcetype by user\
| table process_exec, host, user, query, count

[SPK6 - Connection to a pastebin domain]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Connection to a pastebin domain
enableSched = 1
quantity = 0
relation = greater than
search = index=win | search  signature="DNSEvent (DNS query)"\
| where query IN ("pastebin.com")\
| stats count values(query) as query values(process_exec) as process_exec values(host) as host values(sourcetype) as sourcetype by user\
| table process_exec, host, user, query, count

[SPK7 - Dump LSASS via procdump]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Dump LSASS via procdump
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_procdump` (Processes.process=*-ma* OR Processes.process=*-mm*) Processes.process=*lsass* by Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.dest\
| `drop_dm_object_name(Processes)`\
| `security_content_ctime(firstTime)`\
| `security_content_ctime(lastTime)`\
| `dump_lsass_via_procdump_filter`

[SPK9 -  Excessive failed password attempts on user account]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Excessive failed password attempts on user account
enableSched = 1
quantity = 0
relation = greater than
search = `wineventlog_security` EventCode=4776 TargetUserName!=*$ Status=0xC000006A\
| bucket span=5m _time\
| stats count as failed_attempts by TargetUserName\
| where failed_attempts > 30

[SPK11 - Ntdsutil Export NTDS]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Ntdsutil Export NTDS
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=ntdsutil.exe Processes.process=*ntds* Processes.process=*create*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id \
| `drop_dm_object_name(Processes)` \
| `security_content_ctime(firstTime)`\
| `security_content_ctime(lastTime)` \
| `ntdsutil_export_ntds_filter`
| `drop_dm_object_name(Processes)`
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| `ntdsutil_export_ntds_filter`
root@splunk:/home/vagrant#
root@splunk:/home/vagrant# cat /opt/splunk/etc/apps/SplunkEnterpriseSecuritySuite/local/savedsearches.conf
[SPK2 - Suspicious connection to a C2]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Suspicious connection to a C2
enableSched = 1
quantity = 0
relation = greater than
search = index=win | search action=allowed AND direction=outbound\
| where dest_port=8080 OR dest_port=9000 OR dest_port=8000\
| stats count values(app) as app values(dest_ip) as dest_ip values(src_ip) as src_ip values(dest_port) as dest_port values(host) as host values(sourcetype) as sourcetype by user\
| where count > 1000\
| table app, dest_ip, src_ip, host, user, dest_port, count



[SPK8 - Malicious execution of powershell command]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Malicious execution of powershell command
enableSched = 1
quantity = 0
relation = greater than
search = index=win CommandLine="*powershell* -ep bypass -e *"\
| stats count by ParentImage CommandLine user\
| table ParentImage, user, CommandLine


[SPK10 - Potential Kerberoasting attack]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Potential Kerberoasting attack
enableSched = 1
quantity = 0
relation = greater than
search = index=win EventCode=4769 ServiceName="honeypot"\
| eval Source=if(IpAddress=="::1", Computer, IpAddress)\
| rex field=user "(?<user>.+)@(?<domain>.+)$"\
| table _time, host, Source, TargetUserName, ServiceName, TicketEncryptionType, user\
| sort - _time

[SPK1 - Suspicious mshta.exe child process]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Suspicious mshta.exe child process
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=mshta.exe AND (Processes.process_name=powershell.exe OR Processes.process_name=colorcpl.exe OR Processes.process_name=msbuild.exe OR Processes.process_name=microsoft.workflow.compiler.exe OR Processes.process_name=searchprotocolhost.exe OR Processes.process_name=scrcons.exe OR Processes.process_name=cscript.exe OR Processes.process_name=wscript.exe OR Processes.process_name=powershell.exe OR Processes.process_name=cmd.exe) by Processes.dest Processes.parent_process Processes.user\
| `drop_dm_object_name(Processes)`\
| `security_content_ctime(firstTime)`\
| `security_content_ctime(lastTime)`\
| `suspicious_mshta_child_process_filter`

[SPK3 - Certutil.exe Download With URLCache and Split Arguments]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Certutil.exe Download With URLCache and Split Arguments
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_certutil` (Processes.process=*urlcache* Processes.process=*split*) OR Processes.process=*urlcache* by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.original_file_name Processes.parent_process_id \
| `drop_dm_object_name(Processes)` \
| `security_content_ctime(firstTime)` \
| `security_content_ctime(lastTime)` \
| `certutil_download_with_urlcache_and_split_arguments_filter`

[SPK4 - Winrm suspicious command]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Winrm suspicious command
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=wsmprovhost.exe Processes.process_name IN ("cmd.exe","sh.exe","bash.exe","powershell.exe","pwsh.exe","schtasks.exe","certutil.exe","whoami.exe","bitsadmin.exe","scp.exe") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id \
| `drop_dm_object_name(Processes)` \
| `security_content_ctime(firstTime)` \
| `security_content_ctime(lastTime)` \
| `winrm_spawning_a_process_filter`

[SPK5 - Ngrok data exfiltration on Network]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Ngrok data exfiltration on Network
enableSched = 1
quantity = 0
relation = greater than
search = index=win | search signature="DNSEvent (DNS query)"\
| where query like "%.ngrok%"\
| stats count values(query) as query values(process_exec) as process_exec values(host) as host values(sourcetype) as sourcetype by user\
| table process_exec, host, user, query, count

[SPK6 - Connection to a pastebin domain]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Connection to a pastebin domain
enableSched = 1
quantity = 0
relation = greater than
search = index=win | search  signature="DNSEvent (DNS query)"\
| where query IN ("pastebin.com")\
| stats count values(query) as query values(process_exec) as process_exec values(host) as host values(sourcetype) as sourcetype by user\
| table process_exec, host, user, query, count

[SPK7 - Dump LSASS via procdump]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Dump LSASS via procdump
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_procdump` (Processes.process=*-ma* OR Processes.process=*-mm*) Processes.process=*lsass* by Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.dest\
| `drop_dm_object_name(Processes)`\
| `security_content_ctime(firstTime)`\
| `security_content_ctime(lastTime)`\
| `dump_lsass_via_procdump_filter`

[SPK9 -  Excessive failed password attempts on user account]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Excessive failed password attempts on user account
enableSched = 1
quantity = 0
relation = greater than
search = `wineventlog_security` EventCode=4776 TargetUserName!=*$ Status=0xC000006A\
| bucket span=5m _time\
| stats count as failed_attempts by TargetUserName\
| where failed_attempts > 30

[SPK11 - Ntdsutil Export NTDS]
action.keyindicator.invert = 0
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.severity = 5
alert.suppress = 1
alert.suppress.period = 86000s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Ntdsutil Export NTDS
enableSched = 1
quantity = 0
relation = greater than
search = | tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=ntdsutil.exe Processes.process=*ntds* Processes.process=*create*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id \
| `drop_dm_object_name(Processes)` \
| `security_content_ctime(firstTime)`\
| `security_content_ctime(lastTime)` \
| `ntdsutil_export_ntds_filter`
| `drop_dm_object_name(Processes)`
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| `ntdsutil_export_ntds_filter

[Threat - RIR - Risk Threshold Exceeded For Object Over 3 days Period - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RIR - Risk Threshold Exceeded For Object Over 3 days Period
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.drilldown_dashboards = []
action.notable.param.drilldown_searches = []
action.notable.param.extract_artifacts = {"asset":["src","dest","dvc","orig_host"],"identity":["src_user","user","src_user_id","_risk_system"]}
action.notable.param.rule_title = RIR - 3 days risk threshold exceeded for $risk_object_type$=$risk_object$ (NbSources=$source_count$ et Source=$orig_source$)
action.notable.param.security_domain = threat
action.notable.param.severity = high
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = source_count,mitre_tactic_id_count,mitre_technique_id_count,normalized_risk_object,risk_object_type
alert.suppress.period = 604800s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
dispatch.earliest_time = -3d@d
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = | tstats `summariesonly` mode(All_Risk.risk_object) as risk_object, sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count,values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as orig_source, dc(source) as source_count, values(All_Risk.risk_object) as all_risk_objects, values(All_Risk.cim_entity_zone) as cim_entity_zone values(All_Risk.risk_message) as risk_message values(All_Risk.threat_object) as threat_object from datamodel=Risk.All_Risk by All_Risk.normalized_risk_object,All_Risk.risk_object_type \
| `drop_dm_object_name("All_Risk")` \
| eval "annotations.mitre_attack"='annotations.mitre_attack.mitre_technique_id', risk_threshold=3\
| where risk_score >= $risk_threshold$ and source_count >= 3 \
| `get_risk_severity(risk_score)` \
| sort - source_count - risk_score



[Threat - RR - Ngrok data exfiltration on Network - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1572"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Ngrok data exfiltration on Network
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.drilldown_dashboards = []
action.notable.param.drilldown_searches = []
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"user","risk_object_type":"user","risk_score":1},{"threat_object_field":"query","threat_object_type":"dns"},{"threat_object_field":"process_exec","threat_object_type":"process"}]
action.risk.param._risk_message = RR - Ngrok data exfiltration on Network : user=$user$
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user,query
alert.suppress.period = 604800s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Ngrok data exfiltration on Network
dispatch.earliest_time = -24h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = index=win | search signature="DNSEvent (DNS query)"\
| where query like "%.ngrok%"\
| stats count values(query) as query values(process_exec) as process_exec values(host) as host values(sourcetype) as sourcetype by user\
| table process_exec, host, user, query, count\



[Threat - RR - Malicious execution of powershell command - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1059.001"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Malicious execution of powershell command
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.drilldown_dashboards = []
action.notable.param.drilldown_searches = []
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"user","risk_object_type":"user","risk_score":1},{"threat_object_field":"ParentImage","threat_object_type":"process"}]
action.risk.param._risk_message = RR - Malicious execution of powershell command : user=$user$
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user,ParentImage
alert.suppress.period = 604800s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Malicious execution of powershell command
dispatch.earliest_time = -24h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = index=win CommandLine="*powershell* -ep bypass -e *"\
| stats count by ParentImage CommandLine user\
| table ParentImage, user, CommandLine
