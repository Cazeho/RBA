[Threat - RR - Malicious execution of powershell command - Rule]
action.correlationsearch.annotations = {"mitre_attack":["T1059.001"]}
action.correlationsearch.enabled = 1
action.correlationsearch.label = RR - Malicious execution of powershell command
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable.param.drilldown_dashboards = []
action.notable.param.drilldown_searches = []
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk = 1
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"user","risk_object_type":"user","risk_score":1},{"threat_object_field":"ParentImage","threat_object_type":"process"}]
action.risk.param._risk_message = RR - Malicious execution of powershell command : user=$user$
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = user,ParentImage
alert.suppress.period = 604800s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
description = Malicious execution of powershell command
dispatch.earliest_time = -24h
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = index=win CommandLine="*powershell* -ep bypass -e *"\
| stats count by ParentImage CommandLine user\
| table ParentImage, user, CommandLine

[Threat - RIR - Risk Threshold Exceeded For Object Over 3 days Period - Rule]
action.correlationsearch.enabled = 1
action.correlationsearch.label = RIR - Risk Threshold Exceeded For Object Over 3 days Period
action.customsearchbuilder.enabled = false
action.makestreams.param.verbose = 0
action.nbtstat.param.verbose = 0
action.notable = 1
action.notable.param.drilldown_dashboards = []
action.notable.param.drilldown_searches = []
action.notable.param.extract_artifacts = {"asset":["src","dest","dvc","orig_host"],"identity":["src_user","user","src_user_id","_risk_system"]}
action.notable.param.rule_title = RIR - 3 days risk threshold exceeded for $risk_object_type$=$risk_object$ (NbSources=$source_count$ et Source=$orig_source$)
action.notable.param.security_domain = threat
action.notable.param.severity = high
action.notable.param.verbose = 0
action.nslookup.param.verbose = 0
action.ping.param.verbose = 0
action.risk.forceCsvResults = 1
action.risk.param._risk = [{"risk_object_field":"","risk_object_type":"","risk_score":1}]
action.risk.param._risk_score = 0
action.risk.param.verbose = 0
action.send2uba.param.verbose = 0
action.threat_add.param.verbose = 0
action.webhook.enable_allowlist = 0
alert.suppress = 1
alert.suppress.fields = source_count,mitre_tactic_id_count,mitre_technique_id_count,normalized_risk_object,risk_object_type
alert.suppress.period = 604800s
alert.track = 1
counttype = number of events
cron_schedule = */10 * * * *
dispatch.earliest_time = -3d@d
dispatch.latest_time = now
dispatch.rt_backfill = 1
enableSched = 1
quantity = 0
realtime_schedule = 0
relation = greater than
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
schedule_window = auto
search = | tstats `summariesonly` mode(All_Risk.risk_object) as risk_object, sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count,values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as orig_source, dc(source) as source_count, values(All_Risk.risk_object) as all_risk_objects, values(All_Risk.cim_entity_zone) as cim_entity_zone values(All_Risk.risk_message) as risk_message values(All_Risk.threat_object) as threat_object from datamodel=Risk.All_Risk by All_Risk.normalized_risk_object,All_Risk.risk_object_type \
| `drop_dm_object_name("All_Risk")` \
| eval "annotations.mitre_attack"='annotations.mitre_attack.mitre_technique_id', risk_threshold=3\
| where risk_score >= $risk_threshold$ and source_count >= 3 \
| `get_risk_severity(risk_score)` \
| sort - source_count - risk_score
